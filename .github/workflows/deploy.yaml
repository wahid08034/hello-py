name: Build and Deploy to AWS ECS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1                   # Change to your region
<<<<<<< HEAD
  ECR_REPOSITORY: hello-py    # Your ECR repo name
=======
  ECR_REPOSITORY: hello-py
  IMAGE_TAG: latest

>>>>>>> a5bf89762c491779cf75a38f6aac003faf020e81


jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Create ECR repository if it doesn't exist
      run: |
        aws ecr describe-repositories --repository-names ${{ env.ECR_REPOSITORY }} || \
        aws ecr create-repository --repository-name ${{ env.ECR_REPOSITORY }}
        # Check if the ECR repository exists; if not, create it

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      run: |
        # Build the Docker image
        docker build -t ${{ env.ECR_REPOSITORY }} .
        
        # Tag the image
        docker tag ${{ env.ECR_REPOSITORY }}:latest ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest
        
        # Push the image
        docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest
        
        # Output the image URI for use in later steps
        echo "image_uri=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest" >> $GITHUB_OUTPUT
    - name: ✅ Done
      run: echo "✅ Docker image pushed to ECR successfully!"
      # ✅ Final success message in GitHub Actions logs